@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Nunito:wght@300;400;600;700&display=swap');

:root {
  --bg-dark: #0a0a0a;
  --bg-panel: #1a1a2e;
  --bg-secondary: #16213e;
  --accent-cyan: #00f5ff;
  --accent-purple: #a855f7;
  --accent-pink: #ff006e;
  --accent-gold: #fbbf24;
  --text-primary: #e2e8f0;
  --text-secondary: #94a3b8;
  --text-muted: #475569;
  --border-glow: rgba(0, 245, 255, 0.3);
  --success-glow: rgba(34, 197, 94, 0.4);
  --warning-glow: rgba(251, 191, 36, 0.4);
}

/* 字体样式 */
.orbitron { 
  font-family: 'Orbitron', monospace; 
}

.nunito {
  font-family: 'Nunito', sans-serif;
}

/* 神经网络背景 */
.neural-grid {
  background-color: var(--bg-dark);
  background-image: 
    linear-gradient(rgba(0, 245, 255, 0.05) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 245, 255, 0.05) 1px, transparent 1px);
  background-size: 60px 60px;
  animation: gridMove 25s linear infinite;
}

@keyframes gridMove {
  0% { background-position: 0 0; }
  100% { background-position: 60px 60px; }
}

/* 霓虹发光效果 */
.glow-cyan {
  box-shadow: 
    0 0 10px rgba(0, 245, 255, 0.3),
    0 0 20px rgba(0, 245, 255, 0.2),
    0 0 40px rgba(0, 245, 255, 0.1);
}

.glow-purple {
  box-shadow: 
    0 0 10px rgba(168, 85, 247, 0.3),
    0 0 20px rgba(168, 85, 247, 0.2),
    0 0 40px rgba(168, 85, 247, 0.1);
}

.glow-pink {
  box-shadow: 
    0 0 10px rgba(255, 0, 110, 0.3),
    0 0 20px rgba(255, 0, 110, 0.2),
    0 0 40px rgba(255, 0, 110, 0.1);
}

.glow-success {
  box-shadow: 
    0 0 10px var(--success-glow),
    0 0 20px var(--success-glow);
}

/* 渐变边框效果 */
.gradient-border::before {
  content: '';
  position: absolute;
  inset: -2px;
  padding: 2px;
  background: linear-gradient(45deg, var(--accent-cyan), var(--accent-purple), var(--accent-pink));
  border-radius: inherit;
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: exclude;
  -webkit-mask-composite: xor;
}

/* 3D卡片系统 */
.card-3d {
  transform-style: preserve-3d;
  transition: transform 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  position: relative;
}

.card-3d.flipped {
  transform: rotateY(180deg);
}

.card-face {
  backface-visibility: hidden;
  position: absolute;
  inset: 0;
  border-radius: 1rem;
  background: linear-gradient(135deg, var(--bg-panel) 0%, var(--bg-secondary) 100%);
  border: 1px solid rgba(0, 245, 255, 0.2);
}

.card-face.back {
  transform: rotateY(180deg);
  background: linear-gradient(135deg, var(--bg-secondary) 0%, var(--bg-panel) 100%);
}

/* 浮动动画 */
.floating {
  animation: float 6s ease-in-out infinite;
}

.floating-delayed {
  animation: float 6s ease-in-out infinite;
  animation-delay: -3s;
}

@keyframes float {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  25% { transform: translateY(-10px) rotate(1deg); }
  50% { transform: translateY(-20px) rotate(0deg); }
  75% { transform: translateY(-10px) rotate(-1deg); }
}

/* 脉冲环形效果 */
.pulse-ring {
  position: relative;
}

.pulse-ring::before {
  content: '';
  position: absolute;
  inset: -10px;
  border-radius: inherit;
  border: 2px solid var(--accent-cyan);
  opacity: 0.6;
  animation: pulse-ring 2s cubic-bezier(0.455, 0.03, 0.515, 0.955) infinite;
}

@keyframes pulse-ring {
  0% { transform: scale(0.8); opacity: 0.8; }
  80% { transform: scale(1.2); opacity: 0; }
  100% { transform: scale(1.2); opacity: 0; }
}

/* 进度圆环 */
.progress-ring {
  transform: rotate(-90deg);
}

.progress-ring__circle {
  transition: stroke-dashoffset 0.5s ease;
  stroke-dasharray: 251.2;
  stroke-dashoffset: 251.2;
  stroke-linecap: round;
  filter: drop-shadow(0 0 5px currentColor);
}

/* 技能条动画 */
.skill-bar {
  transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
}

.skill-bar::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
  animation: shimmer 2s infinite;
}

@keyframes shimmer {
  0% { left: -100%; }
  100% { left: 100%; }
}

/* 全息效果 */
.hologram {
  background: linear-gradient(45deg, 
    rgba(0, 245, 255, 0.1) 0%, 
    rgba(168, 85, 247, 0.1) 50%, 
    rgba(255, 0, 110, 0.1) 100%);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  position: relative;
}

.hologram::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    45deg,
    transparent 30%,
    rgba(255, 255, 255, 0.1) 50%,
    transparent 70%
  );
  animation: scan 3s linear infinite;
}

@keyframes scan {
  0% { transform: translateX(-100%) skewX(-15deg); }
  100% { transform: translateX(100%) skewX(-15deg); }
}

/* 按钮悬停效果 */
.btn-space {
  position: relative;
  background: linear-gradient(135deg, var(--bg-panel), var(--bg-secondary));
  border: 1px solid rgba(0, 245, 255, 0.3);
  color: var(--text-primary);
  transition: all 0.3s ease;
  overflow: hidden;
}

.btn-space::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(45deg, var(--accent-cyan), var(--accent-purple));
  opacity: 0;
  transition: opacity 0.3s ease;
}

.btn-space:hover::before {
  opacity: 0.1;
}

.btn-space:hover {
  transform: translateY(-2px);
  box-shadow: 
    0 10px 20px rgba(0, 0, 0, 0.3),
    0 0 20px var(--border-glow);
}

/* 文字霓虹效果 */
.text-neon {
  text-shadow: 
    0 0 5px currentColor,
    0 0 10px currentColor,
    0 0 20px currentColor;
}

.text-gradient-cyan {
  background: linear-gradient(45deg, var(--accent-cyan), var(--accent-purple));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.text-gradient-purple {
  background: linear-gradient(45deg, var(--accent-purple), var(--accent-pink));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* 数据可视化效果 */
.data-stream {
  position: relative;
  overflow: hidden;
}

.data-stream::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, transparent, var(--accent-cyan), transparent);
  animation: dataFlow 2s linear infinite;
}

@keyframes dataFlow {
  0% { left: -100%; }
  100% { left: 100%; }
}

/* 响应式调整 */
@media (max-width: 768px) {
  .neural-grid {
    background-size: 40px 40px;
  }
  
  .floating {
    animation-duration: 4s;
  }
}

/* 暗黑模式覆盖 */
.dark {
  --bg-dark: #000000;
  --bg-panel: #0f0f1a;
  --bg-secondary: #1a1a2e;
}

/* 成就徽章样式 */
.achievement-badge {
  position: relative;
  background: radial-gradient(circle at center, var(--accent-gold), #f59e0b);
  animation: achievementGlow 2s ease-in-out infinite alternate;
}

@keyframes achievementGlow {
  0% { 
    filter: brightness(1) saturate(1);
    transform: scale(1);
  }
  100% { 
    filter: brightness(1.2) saturate(1.3);
    transform: scale(1.05);
  }
}

/* 加载动画 */
.loading-dots {
  display: inline-block;
}

.loading-dots::after {
  content: '';
  animation: loadingDots 1.5s linear infinite;
}

@keyframes loadingDots {
  0% { content: ''; }
  25% { content: '.'; }
  50% { content: '..'; }
  75% { content: '...'; }
  100% { content: ''; }
}